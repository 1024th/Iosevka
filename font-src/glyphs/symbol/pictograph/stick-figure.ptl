$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from"../../../support/utils.mjs"
import [Box] from"../../../support/geometry/box.mjs"
import [Vec2] from"../../../support/geometry/point.mjs"

glyph-module

glyph-block Symbol-Pictograph-Stick-Figure : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives

	define PictographSw : AdviceStroke 4

	glyph-block-export StickFigureKit
	define [StickFigureKit box sw] : namespace
		export : define [RoundSeg h1 v1 h2 v2 cl cr] : glyph-proc
			local z1 : new Vec2 [mix box.left box.right h1] [mix box.bottom box.top v1]
			local z2 : new Vec2 [mix box.left box.right h2] [mix box.bottom box.top v2]

			include : dispiro
				disable-contrast
				widths.center sw
				corner z1.x z1.y
				corner z2.x z2.y

			if cl : include : CircleDotAt z1.x z1.y (sw / 2)
			if cr : include : CircleDotAt z2.x z2.y (sw / 2)

		export : define [ArcVH h1 v1 h2 v2 cl cr] : glyph-proc
			local z1 : new Vec2 [mix box.left box.right h1] [mix box.bottom box.top v1]
			local zm : new Vec2 [mix box.left box.right h1] [mix box.bottom box.top v2]
			local z2 : new Vec2 [mix box.left box.right h2] [mix box.bottom box.top v2]

			include : dispiro
				disable-contrast
				widths.center sw
				flat z1.x z1.y
				curl [mix z1.x zm.x 0.01] [mix z1.y zm.y 0.01]
				arcvh
				flat [mix z2.x zm.x 0.01] [mix z2.y zm.y 0.01]
				curl z2.x z2.y

			if cl : include : CircleDotAt z1.x z1.y (sw / 2)
			if cr : include : CircleDotAt z2.x z2.y (sw / 2)

		export : define [ArcHV h1 v1 h2 v2 cl cr] : glyph-proc
			local z1 : new Vec2 [mix box.left box.right h1] [mix box.bottom box.top v1]
			local zm : new Vec2 [mix box.left box.right h2] [mix box.bottom box.top v1]
			local z2 : new Vec2 [mix box.left box.right h2] [mix box.bottom box.top v2]

			include : dispiro
				disable-contrast
				widths.center sw
				flat z1.x z1.y
				curl [mix z1.x zm.x 0.01] [mix z1.y zm.y 0.01]
				archv
				flat [mix z2.x zm.x 0.01] [mix z2.y zm.y 0.01]
				curl z2.x z2.y

			if cl : include : CircleDotAt z1.x z1.y (sw / 2)
			if cr : include : CircleDotAt z2.x z2.y (sw / 2)

		export : define [Box h1 v1 h2 v2] : glyph-proc
			local z1 : new Vec2 [mix box.left box.right h1] [mix box.bottom box.top v1]
			local z2 : new Vec2 [mix box.left box.right h2] [mix box.bottom box.top v1]
			local z3 : new Vec2 [mix box.left box.right h2] [mix box.bottom box.top v2]
			local z4 : new Vec2 [mix box.left box.right h1] [mix box.bottom box.top v2]

			include : spiro-outline
				corner z1.x z1.y
				corner z2.x z2.y
				corner z3.x z3.y
				corner z4.x z4.y

		export : define [Circ h1 v1 pr] : glyph-proc
			local z1 : new Vec2 [mix box.left box.right h1] [mix box.bottom box.top v1]
			include : DotAt z1.x z1.y (pr * (box.top - box.bottom))
