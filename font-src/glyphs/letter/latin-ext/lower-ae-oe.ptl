$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from"../../../support/utils.mjs"
import [Dotless CvDecompose RequireCcmpDecompose] from"../../../support/gr.mjs"

glyph-module

glyph-block Letter-Latin-Lower-AE-OE : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes : nShoulder OBarLeft

	glyph-block-export SubDfAndShift
	define [SubDfAndShift pShift df _o] : begin
		local o : fallback _o 0
		local subDfWidth : df.middle + 0.5 * HVContrast * df.mvs + df.leftSB + o
		local subDf : DivFrame (subDfWidth / Width) 2 (df.leftSB / SB)

		local subDfFullShift : df.rightSB - subDf.rightSB
		local shift : pShift * subDfFullShift

		return { subDf shift }

	do "a subglyphs"
		define [AAShape pShift df body o] : begin
			local { subDf shift } : SubDfAndShift pShift df o
			return : WithTransform [ApparentTranslate shift 0] [body subDf df.mvs]

		glyph-block-import Letter-Latin-Lower-A : DoubleStorey
		define DoubleStoreyConfig : object
			doubleStoreySerifless        { DoubleStorey.Serifless         }
			doubleStoreySerifed          { DoubleStorey.Serifed           }
			doubleStoreyTailed           { DoubleStorey.Tailed            }
			doubleStoreyToothlessCorner  { DoubleStorey.ToothlessCorner   }
			doubleStoreyToothlessRounded { DoubleStorey.ToothlessRounded  }

		create-glyph "ae/a" : glyph-proc
			define df : DivFrame para.diversityM 3
			set-width df.width
			include : df.markSet.e
			set-base-anchor 'cvDecompose' 0 0
			include : AAShape 0 df DoubleStorey.ToothlessRounded 0

		foreach { suffix { bodyR } } [Object.entries DoubleStoreyConfig] : do

			create-glyph "aa.\(suffix)" : glyph-proc
				define df : DivFrame para.diversityM 3
				set-width df.width
				include : df.markSet.e

				local [left] : AAShape 0 df DoubleStorey.ToothlessRounded
				local [right] : AAShape 1 df bodyR
				include : difference [right] : intersection
					MaskAbove (XH * OverlayPos * 1.02)
					union
						WithTransform [ApparentTranslate (-0.25 * df.mvs) 0] [left]
						WithTransform [ApparentTranslate (-0.50 * df.mvs) 0] [left]
						WithTransform [ApparentTranslate (-0.75 * df.mvs) 0] [left]
						WithTransform [ApparentTranslate (-1.00 * df.mvs) 0] [left]
				include : difference [left] : intersection
					MaskBelow (XH * OverlayPos * 1.02)
					union
						WithTransform [ApparentTranslate (+0.25 * df.mvs) 0] [right]
						WithTransform [ApparentTranslate (+0.50 * df.mvs) 0] [right]
						WithTransform [ApparentTranslate (+0.75 * df.mvs) 0] [right]
						WithTransform [ApparentTranslate (+1.00 * df.mvs) 0] [right]

	do "o subglyphs"
		define [oeOPart pShift df] : begin
			local { subDf shift } : SubDfAndShift pShift df OX
			return : WithTransform [ApparentTranslate shift 0]
				OShape XH 0 subDf.leftSB subDf.rightSB df.mvs
					subDf.archDepthA SmallArchDepth
					subDf.archDepthB SmallArchDepth

		create-glyph 'oe/o' : glyph-proc
			define df : DivFrame para.diversityM 3
			set-width df.width
			include : df.markSet.e
			set-base-anchor 'cvDecompose' 0 0
			include : oeOPart 0 df

		create-glyph 'ao/o' : glyph-proc
			define df : DivFrame para.diversityM 3
			set-width df.width
			include : df.markSet.e
			set-mark-anchor 'cvDecompose' 0 0
			include : oeOPart 1 df

	do "e subglyphs"
		glyph-block-import Letter-Latin-Lower-E : SmallEShape SmallERoundedShape

		define [EShape pShift df body] : begin
			local { subDf shift } : SubDfAndShift pShift df OX
			return : WithTransform [ApparentTranslate shift 0] [body subDf XH df.mvs]

		define Config : object
			flatCrossbar { SmallEShape        }
			rounded      { SmallERoundedShape }

		foreach { suffix { body } } [Object.entries Config] : do
			create-glyph "ae/e.\(suffix)" : glyph-proc
				local df : DivFrame para.diversityM 3
				set-width 0
				set-mark-anchor 'cvDecompose' 0 0
				include : EShape 1 df body

	do "u subglyphs"
		define [ueUPart df fSlab] : new-glyph : glyph-proc
			local { subDf } : SubDfAndShift 0 df 0
			local ada : subDf.archDepthA SmallArchDepth df.mvs
			local adb : subDf.archDepthB SmallArchDepth df.mvs

			local abarRight : df.middle + df.mvs / 2 * HVContrast
			include : nShoulder
				left -- abarRight
				right -- (df.rightSB - OX)
				stroke -- df.mvs
				ada -- adb
				adb -- adb
			include : FlipAround (df.width / 2) (XH / 2)
			if fSlab : include : HSerif.lt df.leftSB XH SideJut

		define Config : object
			"toothed"       { SLAB  }
			"motionSerifed" { true  }
			"serifless"     { false }

		foreach { suffix { fSlab } } [Object.entries Config] : do
			create-glyph "ue/u.\(suffix)" : glyph-proc
				local df : DivFrame para.diversityM 3
				include : df.markSet.e
				set-base-anchor 'cvDecompose' 0 0
				include : ueUPart df fSlab

	select-variant "aa" 0xA733 (follow -- 'a/turnABase')

	select-variant "ae/e" (follow -- 'e')
	select-variant "ue/u"

	derive-composites 'ae' 0xE6   'ae/a' 'ae/e'
	derive-composites 'oe' 0x153  'oe/o' 'ae/e'
	derive-composites 'ue' 0x1D6B 'ue/u' 'ae/e'
	derive-composites 'ao' 0xA735 'ae/a' 'ao/o'
	derive-composites 'oo' 0xA74F 'oe/o' 'ao/o'
	derive-composites 'uo' 0xAB63 'ue/u' 'ao/o'

	alias 'cyrl/oo' 0xA699 'oo'

	turned 'turnae' 0x1D02 'ae' [DivFrame para.diversityM 3].middle (XH / 2)
	turned 'turnoe' 0x1D14 'oe' [DivFrame para.diversityM 3].middle (XH / 2)
