$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'
import [Dotless CvDecompose MathSansSerif] from "../../../support/gr"

glyph-module

glyph-block Letter-Latin-Upper-E : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Marks : markHalfStroke
	glyph-block-import Letter-Latin-Upper-F : FShape RevFShape EFVJutLength

	define xEBarLeft : SB * 1.5
	define [EShape] : params [top pyBar serifLT serifLB serifV] : glyph-proc
		define stroke : AdviceStroke2 2 3 CAP
		include : FShape top pyBar
		include : HBarBottom (xEBarLeft - O) RightSB 0 stroke
		if serifLT : include : LeftwardTopSerif xEBarLeft top SideJut
		if serifLB : include : LeftwardBottomSerif xEBarLeft 0 SideJut
		if serifV : begin
			local { jutTop jutBot } : EFVJutLength top pyBar stroke
			include : DownwardRightSerif RightSB top jutTop
			include : UpwardRightSerif RightSB 0 jutBot

	glyph-block-export RevEShape
	define [RevEShape] : params [top pyBar serifRT serifRB serifV] : glyph-proc
		define stroke : AdviceStroke2 2 3 CAP
		define xEBarRight : Width - SB * 1.5
		include : RevFShape top pyBar
		include : HBarBottom SB (xEBarRight + O) 0 stroke
		if serifRT : include : RightwardTopSerif xEBarRight top SideJut
		if serifRB : include : RightwardBottomSerif xEBarRight 0 SideJut
		if serifV : begin
			local { jutTop jutBot } : EFVJutLength top pyBar stroke
			include : DownwardLeftSerif SB top jutTop
			include : UpwardLeftSerif SB 0 jutBot

	define EConfig : object
		serifless      { false false false }
		topLeftSerifed { true false false  }
		serifed        { true true true    }

	foreach { suffix { lt lb v } } [Object.entries EConfig] : do
		create-glyph "E.\(suffix)" : glyph-proc
			include : MarkSet.capital
			include : EShape CAP (serifLT -- lt) (serifLB -- lb) (serifV -- v)
			set-base-anchor 'trailing' (RightSB - markHalfStroke) 0

		create-glyph "smcpE.\(suffix)" : glyph-proc
			include : MarkSet.capital
			include : EShape XH (serifLT -- lt) (serifLB -- lb) (serifV -- v)
			set-base-anchor 'trailing' (RightSB - markHalfStroke) 0

		create-glyph "revE.\(suffix)" : glyph-proc
			include : MarkSet.capital
			include : RevEShape CAP (serifRT -- lt) (serifRB -- lb) (serifV -- v)


	select-variant 'E' 'E'
	link-reduced-variant 'E/sansSerif' 'E' MathSansSerif
	select-variant 'smcpE' 0x1D07 (follow -- 'E')

	alias 'grek/Epsilon' 0x395 'E'
	alias-reduced-variant 'grek/Epsilon/sansSerif' 'grek/Epsilon' 'E/sansSerif' MathSansSerif
	alias 'cyrl/Ie' 0x415 'E'

	select-variant 'revE' 0x18E (follow -- 'E')
	turned 'turnSmcpE' 0x2C7B 'smcpE' Middle (XH / 2)

	glyph-block-import Letter-Blackboard : BBS BBD
	create-glyph 'mathbb/E' 0x1D53C : glyph-proc
		include : MarkSet.capital
		include : union
			VBarLeft (xEBarLeft + BBD) 0 CAP BBS
			HBarBottom xEBarLeft (xEBarLeft + BBD) 0 BBS
			difference
				FShape CAP (serif -- false) (_stroke -- BBS)
				Rect (CAP - BBS) BBS (xEBarLeft + BBS * HVContrast) (xEBarLeft + BBD)
			HBarBottom (xEBarLeft - O) RightSB 0 BBS
